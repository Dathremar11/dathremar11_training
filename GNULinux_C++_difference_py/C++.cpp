#include <iostream> // input/output stream, подключение библиотеки ввода/вывода через потоки

int main()          // Обязательная функция, точка входа в программу, которую не нужно вызывать
{                   // Язык со строгой типизация, любая функция должна что-то возвращаться, поэтому тип int, целое число
    std::cout << "Hello, world" << std::endl;   // << - Оператор вывода в поток, перегруженный битовый сдвиг
// cout - то, куда собираемся выводить(Объект потока) // квалификатор std:: - пространство имен. Если возникает двойственность
// идентификации, в С могла быть написана/существовать одноименная функция int cout; - возникает конфликт имен
// Все новые имена, которые появились с С++ они существуют в пространстве имен std (множество библиотек)
// :: - разделитель между пространствами имен
// endl - символ перевода строки определен в пространстве имен std::endl. Можно заменить на '\n'   (перевод на новую строку)
// Python: import iostream      (использование команды cout из библиотеки iostream в питоне, абстракция)
//         iostream.cout
// Чтобы не вызывать пространство имен перед каждой операцией, можно вызвать все пространство имен. Вызывать в функциях, не вызывать выше уровнем, т.к. возможен конфликт имен.
    using namespace std; // вверху в начале функции
    return 0;       // 0 - это код ошибки (Ошибки нет), нельзя вернуть False/None, т.к. int main() - строгая типизация
}

// GNULinux Компиляторы: 
// GNU compiler collection - gcc - может не разобраться какие библиотеки подключать
// g++ / c++ -- :~/ g++ hello.cpp
// Появляется исполняемый файл a.out -- ./a.cpp (бинарный файл)
// $ - переменная, которая постоянно меняет свою состояние, - это код возврата предыдущей команды
// echo $? -- 0 (ошибки нет) 
// Говорим компилятору выводить в другую программу:
// с++ hello.cpp -o hello.exe

// Увидеть поток со стороны терминала, поток вывода сохраняем в файл:
// ./a.cpp > out.txt

// Вывод в один и тот же поток можно писать в одну строчку:

std::cout << "mipt" << 2016 << '.' << true << std::endl;
// Для вывода в поток ошибок определён поток cerr.

// Поток ввода с клавиатуры называется cin, а считывание из потока производится другой операцией — >> :

std::cin >> x;

// Тип считываемого значения определяется автоматически по типу переменной x.

// Цикл for
// for (x = start; x < stop; x = (a * x + b) % d - числа арифметико-геометрической прогрессии зажатое в кольцо вычетов по модулю d (в пределах от 0 до d включительно)
// Линейный конгруентный генератор псевдо случайных чисел (a * x + b) % 
// Конгруэнтность — отношение эквивалентности на множестве геометрических фигур (отрезков, углов и т. д.).
// равенство, адекватность друг другу различных экземпляров чего-либо