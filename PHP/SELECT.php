<? /*
Выборка данных (SELECT)

Пишем SQL-запрос на выборку данных.
В переменную $res запишем наш запрос:

SELECT - выбрать,
* - все,
FROM gb - из таблицы gb.

Вариант 1.
Получение массива данных с помощью функции:

mysqli_fetch_all()

- В переменной $res будет содержаться объект mysqli_result , проще говоря, некая
ссылка на эти данные. С помощью функции mysqli_fetch_all() по этой ссылке получим
необходимые данные в массив $date . В качестве параметра эта функция принимает
результирующий набор $res . Для указания типа получаемого массива применяются константы.

Константы функции mysqli_fetch_all(): php.net

Константа MYSQLI_NUM (по умолчанию) позволяет получить нумерованный массив.

Константа MYSQLI_ASSOC позволяет вместо нумерованного получить ассоциативный массив.

Константа MYSQLI_BOTH позволяет получить оба массива.

Чтобы получить нужные нам поля, их просто нужно перечислить, например:
"SELECT name, text, date FROM gb" .

Если нужно сортировать в обратном порядке, используется команда:
ORDER BY id DESC , где id - поле, по которому будем сортировать.

Чтобы посмотреть, сколько рядов было выбранно, можно воспользоваться функцией

mysqli_num_rows()

- в качестве параметра она принимает сам результирующий запрос $res .
Далее мы можем пройти в цикле foreach по массиву $date и вывести то, что нам нужно.
*/
?>

-- файл index.php --

<?php
header ( "Content-type: text/html; charset=utf-8" );
error_reporting (- 1 );

// функция для удобного просмотра массивов
function print_arr( $arr ){
echo '<pre>' . print_r( $arr , true ) . '</pre>' ;
}
// Подключение к базе данных
$db = @mysqli_connect( '127.0.0.1', 'root', '', 'gb' ) or die ( 'Ошибка соединения с БД' );
if (! $db ) die (mysqli_connect_error());

// Установка кодировки соединения
mysqli_set_charset ( $db , "utf8" ) or die ( 'Не установлена кодировка');

// Запрос к базе данных (выбираем данные из нашей таблицы)
// выполняем запрос
$res = mysqli_query( $db , "SELECT name, text, date FROM gb ORDER BY id DESC" );

// смотрим, сколько рядов было выбранно (4)
echo mysqli_num_rows( $res );

// получаем данные в ассоциативный массив
$date = mysqli_fetch_all( $res , MYSQLI_ASSOC);
// распечатаем массив $date
print_arr ( $date );
//var_dump($date);

// пройдемся в цикле по массиву $date и выведем полученные данные
foreach ( $date as $item ){
echo "Name: { $item [ 'name' ]} <br>" ;
echo "Text: { $item [ 'text' ]} <br>" ;
echo "Date: { $item [ 'date' ]} <br>" ;
echo '<hr>' ;
}
?>
выведет:
4
Name: Ваня
Text: Hello!
Date: 2019-05-21 22:26:04
Name: Петя
Text: )))))!
Date: 2019-05-21 22:03:41
Name: Вася
Text: Привет! Это второе сообщение!!
Date: 2019-05-21 21:52:24
Name: Андрей
Text: Привет! Это первое сообщение!
Date: 2019-05-21 21:51:39

<? /*
Вариант 2.

Получение массива данных с помощью функции:

mysqli_fetch_assoc()

- эта функция извлекает результирующий ряд в виде ассоциативного массива.

Создадим массив $date2 = []; - мы его будем формировать самостоятельно.
Далее мы будем использовать функцию mysqli_fetch_assoc(), которая получает только текущую строку данных. Чтобы получить все строки необходимо по результатам пройти в цикле: while($row = mysqli_fetch_assoc($res)) . В переменную $row мы получим результат работы функции mysqli_fetch_assoc($res) , параметром в которой будет результирующий набор данных $res.

Чтобы убедиться, что данные есть, распечатаем переменную $row: print_arr($row).
Далее в переменную $date2 по ключу $row['id'] положим массив $row.
Распечатаем переменную $date2.

Далее пройдемся в цикле foreach по массиву $date2 и выведем полученные данные. */
?>


-- файл index.php --

<?php
header ( "Content-type: text/html; charset=utf-8" );
error_reporting (- 1 );

// функция для удобного просмотра массивов
function print_arr( $arr ){
echo '<pre>' . print_r( $arr , true ) . '</pre>' ;
}
// Подключение к базе данных
$db = @mysqli_connect( '127.0.0.1', 'root', '', 'gb' ) or die ( 'Ошибка соединения с БД' );
if (! $db ) die (mysqli_connect_error());

// Установка кодировки соединения
mysqli_set_charset ( $db , "utf8" ) or die ( 'Не установлена кодировка');

// Запрос к базе данных (выбираем данные из нашей таблицы)
// выполняем запрос
$res = mysqli_query( $db , "SELECT id, name, text, date FROM gb ORDER BY id DESC" );

// создадим массив
$date2 = [];

// Далее мы будем использовать функцию mysqli_fetch_assoc(), которая получает только текущую строку данных
// В переменную $row мы получим результат работы функции mysqli_fetch_assoc($res)
// Чтобы получить все строки необходимо по результатам пройти в цикле while
while ($row = mysqli_fetch_assoc($res )){
//print_arr($row);
// в переменную $date2 по ключу $row['id'] положим массив $row
$date2[$row['id']] = $row ;
}
print_arr($date2);

// пройдемся в цикле по массиву $date2 и выведем полученные данные
foreach ($date2 as $item ){
// на каждой итерации получаем:
echo "Name: {$item ['name']} <br>";
echo "Text: {$item ['text']} <br>";
echo "Date: {$item ['date']} <br>";
echo '<hr>';
}
?>
- в результате распечатки print_arr($date2) получим:
Array
(
[4] => Array
(
[id] => 4
[name] => Ваня
[text] => Hello!
[date] => 2019-05-21 22:26:04
)
[3] => Array
(
[id] => 3
[name] => Петя
[text] => )))))!
[date] => 2019-05-21 22:03:41
)
[2] => Array
(
[id] => 2
[name] => Вася
[text] => Привет!
Это второе сообщение!!
[date] => 2019-05-21 21:52:24
)
[1] => Array
(
[id] => 1
[name] => Андрей
[text] => Привет!
Это первое сообщение!
[date] => 2019-05-21 21:51:39
)
)
- здесь в качестве ключей нумерация начинается не с нуля, а с единицы.

- в результате выполнения цикла foreach получим:
Name: Ваня
Text: Hello!
Date: 2019-05-21 22:26:04
Name: Петя
Text: )))))!
Date: 2019-05-21 22:03:41
Name: Вася
Text: Привет! Это второе сообщение!!
Date: 2019-05-21 21:52:24
Name: Андрей
Text: Привет! Это первое сообщение!
Date: 2019-05-21 21:51:39
